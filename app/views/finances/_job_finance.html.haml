
%ul.finance
	- tot_owing = 0.00
	- tot_received = 0.00
	- tot_hours = 0.00
	%li.list-group-item.list-group-item-success
		%span.reference
			Fees Paid
		%span.paid
			= number_to_currency(@job.fees_paid, unit: "&pound; ".html_safe)

	- @job.tasks.each do |t|
		- next unless t.is_financial
		%li{ :class => "list-group-item #{(t.paid || t.task_complete?) ? "list-group-item-success" : "financial"}" }
			%span.reference
				= t.title
			%span.paid
				- if t.paid
					= number_to_currency(t.cost, unit: "&pound; ".html_safe)
					- tot_received += t.cost.to_f
			%span.owing
				- if !t.paid
					= number_to_currency(t.cost, unit: "&pound; ".html_safe)
					- tot_owing += t.cost.to_f

	- @job.notes.each do |n|
		%li{ :class => "list-group-item #{n.paid ? "list-group-item-success" : "financial"}" }
			%span.reference
				= n.title
			%span.paid
				- if n.paid
					= number_to_currency(n.cost, unit: "&pound; ".html_safe)
					- tot_received += n.cost.to_f
			%span.owing
				- if !n.paid
					= number_to_currency(n.cost, unit: "&pound; ".html_safe)
					- tot_owing += n.cost.to_f
			%span.time
				- if !n.time_taken.blank?
					= n.time_taken.to_s + " h".html_safe
					- tot_hours += n.time_taken

	%li.list-group-item
		%span.reference
			%strong Total
		%span.paid
			%strong= number_to_currency(tot_received, unit: "&pound;".html_safe)
		%span.owing
			%strong= number_to_currency(tot_owing, unit: "&pound;".html_safe)
		%span.time
			%strong= tot_hours.round(2).to_s + " h".html_safe
